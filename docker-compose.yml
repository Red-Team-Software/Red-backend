services:
  #!rabbitmq
  rabbitmq:
    image: rabbitmq:4.0-management
    container_name: GoDeliRed_rabbitmq
    restart: always
    ports:
      - 5670:5672
      - 15670:15672
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
    networks:
      - red-team
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:15672']
      interval: 30s
      timeout: 10s
      retries: 5
  #!mongo db
  mongo:
    image: mongo:8.0.1
    container_name: GoDeliRed_mongo
    restart: always
    ports:
      - ${MONGO_DB_PORT}:27017
    environment:
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_DB_USER_NAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_DB_USER_PASSWORD}
    volumes:
      - ./database/mongo:/data/db
    networks:
      - red-team
  #!mongoexpress (Para verse desde localhost)
  mongo-express:
    image: mongo-express:1.0.2-18-alpine3.19
    container_name: GoDeliRed_mongoexpress
    restart: always
    ports:
      - 8089:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_DB_USER_NAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_DB_USER_PASSWORD}
      ME_CONFIG_MONGODB_URL: ${MONGOEXPRESS_DB_HOST}
      ME_CONFIG_BASICAUTH: false
    depends_on:
      - mongo
    networks:
      - red-team

  #!postgres db
  postgres:
    image: postgres:14.3
    container_name: GoDeliRed_postgres
    restart: always
    ports:
      - '${POSTGRES_DB_PORT}:5432'
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_DB_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB_NAME}
      POSTGRES_USER: ${POSTGRES_DB_USERNAME}
    networks:
      - red-team
    volumes:
      - ./database/postgres:/var/lib/postgresql/data

networks:
  red-team:
    driver: bridge
